<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kotlinapplication.adapter.infrastructure.mapper.UserToDoMapper">
  <resultMap id="Base_Result_Map"
    type="com.example.kotlinapplication.domain.user.todo.UserToDoEntity">
    <id column="todoId" property="todo_id" jdbcType="INTEGER"/>
    <result column="userId" property="user_id" jdbcType="VARCHAR"/>
    <result column="todo" property="todo" jdbcType="VARCHAR"/>
    <result column="timeLimit" property="time_limit" jdbcType="TIMESTAMP"/>
    <result column="priority" property="priority" jdbcType="VARCHAR"/>
    <result column="doneFlg" property="done_flg" jdbcType="VARCHAR"/>
    <result column="createdAt" property="created_at" jdbcType="TIMESTAMP"/>
    <result column="updatedAt" property="updated_at" jdbcType="TIMESTAMP"/>
  </resultMap>

  <select id="findByUserId" parameterType="String" resultMap="Base_Result_Map">
    select todo_id, user_id, todo, time_limit, priority, done_flg, created_at, updated_at
    from user_todo
    where user_id = #{userId}
  </select>

  <select id="findByUserIdAndKeywordAndDoneFlg" resultMap="Base_Result_Map">
    select todo_id, user_id, todo, time_limit, priority, done_flg, created_at, updated_at
    from user_todo
    where 1 = 1
    <if test="keyword != null">
      and todo like concat('%', #{keyword}, '%')
    </if>
    <if test="doneFlg != null">
      and done_flg = #{doneFlg}
    </if>
  </select>

  <select id="findByUserIdAndToDoId" resultMap="Base_Result_Map">
    select todo_id, user_id, todo, time_limit, priority, done_flg, created_at, updated_at
    from user_todo
    where user_id = #{userId}
    and todo_id = #{todoId}
  </select>

  <insert id="save" parameterType="com.example.kotlinapplication.domain.user.todo.UserToDoEntity">
    insert into user_todo (user_id, todo, time_limit, priority, done_flg)
    values (#{userId}, #{todo}, #{timeLimit}, #{priority}, #{doneFlg})
  </insert>

  <update id="update" parameterType="com.example.kotlinapplication.domain.user.todo.UserToDoEntity">
    update user_todo
    <set>
      todo_id = #{todoId},
      user_id = #{userId},
      todo = #{todo},
      time_limit = #{timeLimit},
      priority = #{priority},
      done_flg = #{doneFlg},
    </set>
    where todo_id = #{todoId}
  </update>

  <delete id="deleteByUserIdAndToDoId">
    delete from user_todo
    where user_id = #{userId}
    and todo_id = #{todoId}
  </delete>
</mapper>